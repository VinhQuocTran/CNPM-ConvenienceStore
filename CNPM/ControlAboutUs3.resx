<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tBm9WGMeTGPpWWbRD8KWJy0nMMY83g8sbEyjGz3HwI3uMQhCctWtUOaPRkMYbGzWyeWxG5ngD0jdVNM/
        1ZdVZEhOpLk6DTuIa9mmJFtcFa8+DST18DDwIXc0JP0IW4aXgXuF7BHsJV2whCEIQhCEITEIQhCYnEwh
        CBqxp3Dw/qPEfpD3Y/0X2ij43AhCEIQhCEIQhOQZCEIQhCEIQhCEIQhCEIQhCYhOmdM5aZn8if2V/9oA
        DAMBAAIAAwAAABCnZbJbbbbJJNtv/wD/AL7fbSSSWSWSW+22/wBtv9vpZV7JbJJJJbbbbbtttstttn+/
        220//tttttv/AL/WypWS2SSSSSSSS222222/bbbbbf8A/wD/AP8A9v8A/wC7fyyz7yWySSW222SSSSSy
        222222yabbbbbSSSSTT2WWNCyW222222222ySSSSSSSW22222SSSSSSSSWyyxtEAUmAAAACSW2222222
        SSSSS2222222SSS2yWWNIkAAAAEkkmCSSSSSQ22222SSSSSSS22222ySyxtNkkEkkklsk2wCAAAAAAA2
        22SSSSSSSS22SS2WJpNskktttJJtttttNpJIAAAW222222SSSSSS2yxNJtsttJNpJJNttttttttpIAAG
        2222222ySSWyUJpJttpJJJttJJJJtttttttJIASSSSSW22222gAlNpJJJJNtttttJJJJJJJJttttpLaa
        SSSS222wSkJtpJJJttttttttJJJJJJJJttttttSSSSSSSSAllJttJNtttJJNtttttttJJJJNtttt9/8A
        8lkAAkDbaSbbbbba2SQSSbbbbbbbbSSSSbbbbbb/AGy0kk200k2220TCryAgkk222222220kkkkkk222
        222220mkkm2gXjxFDAAAEgm2222222k0kkkkkkm22222kygEgARDlawXgACgAAAAgi2220kkkkkkkkkm
        22kkSgAABHMJWyKSMggAAAAAAW2S2200kkkkkkkkkkiSAADnPxVevEBtsAAAAAAAAAWy222220kkkkkk
        0SSASA7YqnT9XC8AAAAAAAACQAQS2222220kk0mgSSSQkmHZVwRywAAAAAAAAAAAAAACW22222k220AS
        SR0rUyReBB+QAAAAAAAAAAAAAAAkki22WWSQQB0eJk4luRxzleAAAAAAAAAAAAAAAAAAAACWSSSSanLL
        RCTNieQ+QAAAAAAAAAAAAAAAAAAAAASSQCQYkbHYxJS1iVSAAAACAAAAAAAAAAAAAAAAAAAACRs5k025
        wu+KKAAAAASSSSSQAAAAAAAAAAAAAAACQ+5v8+RpsTRgAAAAASSSSSSSQCAAAAAAAAAASAABKZL0t/uw
        CoCQAAAASSSSSSSSQQAQSAAAAACSAAdU5OmtumQX+SSQAAASSSSSSSSSSSSQAAAACQSABhnZm0+2yA5y
        ACSQAACSSSSSSSSSSSSAAACSASSGIrZWm00QG8QQCQCSAAACSSSSSSSSSSAAASSQAexnJJm2kyChikm0
        QQCACSSAAAAAAAAAAAAASASTRMrJc00mCGXmkmkmmCCQCSQAASSSSSSSQQAQACcZ3JIm3skQwAC220mm
        kmkwCSAASSSSAAASSQSSMiOpZG2t8gSxwSm0immmm02km2kSSSAACSQAQADQRnY5k17mSEDgk0mmmm00
        m0k20km2wkmSASQSSCiWJHYk9LwB3g2000w2m02km20kk22km202ASASewpYlEnhOgC+20000mkmk2kk
        m22kkm2k2kmAAQGtXJU40/RG19m0k002m2km0kkm22kkm2k2kwEikqatEnE1C7kik0w2m0m0k20kkm22
        kkm2k2kyk201O4nJoBZOLNGgGk0m0m2kk222k2200km2m0SC20rkPbNzOLU9K2wmk2k20k222kkm2m20
        kk2gQCWk1fqpJhbApdkkkm20ACyUAAkkkmW2y0gEg2AQAkk5N6moyASQSCQACSSSACQQCSSSSSSySSQC
        SCQE21b/AGWWppANoEgkkEkggAAAAAkkkEkkkkkgAgkJtuS6yWWF5JNoAkkkkAAAAAAEkkAAAAAAAEkA
        ghNLWSWSSyd5JNgAAkkkk8kkEkAAEgAkkkkkAEggBrSW2ySWTtJNsgAAAAAAAEkkkkgAAAAAAAEkEgkE
        IS2ySWyX5bNkgAAAAAAAAEkkkkkEAAAEkgEgpggCSSS22WtJJtkAAAAAAAAEEkkkkkkkkkkAEhpv/8QA
        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
</value>
  </data>
</root>